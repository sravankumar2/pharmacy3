{"version":3,"sources":["logo.svg","components/Navbar/index.js","actionTypes/index.js","actions/index.js","components/Manager/sidebar.js","components/Manager/addStock.js","components/Manager/viewStock.js","components/Manager/addEmployee.js","components/Manager/viewEmployes.js","components/Manager/viewOrders.js","components/Manager/createOrder.js","components/Manager/index.js","components/SalesExecutive/viewOrders.js","components/SalesExecutive/index.js","components/Login/index.js","components/Landing/index.js","components/Home/index.js","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js","components/SalesExecutive/viewOrders.module.css","components/Manager/createOrder.module.css","components/Manager/addStock.module.css","components/Manager/addEmp.module.css","components/Manager/viewStock.module.css"],"names":["Navbar","className","src","alt","ADMIN_LOGIN","ADMIN_LOGOUT","SALESEXECUTIVE_LOGIN","SALESEXECUTIVE_LOGOUT","ADD_MEDICINE","ADD_SALES_EXECUTIVE","CREATE_ORDER","ADD_TO_CART","EMPTY_CART","UPDATE_INVENTORY_LIST","UPDATE_EMPLOYEE_LIST","UPDATE_ALL_ORDERS","UPDATE_EXECUTIVE_DETAILS","UPDATE_INVENTORY_DETAILS","USER_ID_FOR_UPDATE","MEDICINE_ID_FOR_UPDATE","updateExecutiveDetails","payload","type","updateInventoryDetails","createOrder","useStyles","makeStyles","theme","root","width","height","margin","padding","position","backgroundColor","text","marginLeft","spacing","paddingLeft","nested","paddingRight","links","textDecoration","color","connect","state","loginStatus","dispatch","logOutAdmin","classes","React","useState","stock","setStock","emp","setEmp","ord","setOrd","useHistory","List","component","ListItem","button","onClick","e","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","to","localStorage","setItem","add_medicine_to_inventory","addMedicine","medicineName","setMedicineName","manufacturerName","setManufacturerName","price","setPrice","discount","setDiscount","history","id","styles","loginform","headerTitle","onSubmit","medicineDetails","medicineId","Math","floor","random","preventDefault","target","value","inventoryList","JSON","parse","getItem","push","stringify","alert","row","name","required","placeholder","onChange","min","max","update_inventory_details","inventory_list_after_delete_ById","setMedicineId","tableWrapper","gridTable","inventoryListAfterUpdate","updatedIndex","findIndex","prod","handleUpdate","map","item","popItem","find","handleEdit","inventoryListAfterDelete","filter","removeStock","add_executive_to_team","addSalesExecutive","firstName","setFirstName","lastName","setLastName","dob","setDob","gender","setGender","experience","setExperience","executiveDetails","salesExecutiveId","empList","rowRadio","for","teamList","update_executive_details","team_list_after_delete","console","log","setSalesExecutiveId","empListAfterUpdate","empListAfterDelete","allOrders","orders_list_after_delete","updateAllOrders","orders","container","header","index","customerName","contactNumber","productName","quantity","total","ordersListAfterDelete","orderId","style","cursor","create_order","setCustomerName","setContactNumber","setProductName","setQuantity","productList","orderDetails","cantactNumber","newOrders","pattern","maxlength","dropdown","handleChange","readOnly","prevState","marginRight","top","adminLogin","salesLogin","path","viewOrders","logOutSales","marginTop","border","adminSignedIn","salesSignedIn","props","userData","loginEmail","setLoginEmail","loginPassword","setLoginPassword","setLoginStatus","label","eVal","pVal","Landing","selectedOption","setSelectedOption","options","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","cartItem","userIdForUpdate","medicineIdForUpdate","loginReducer","store","createStore","reducer","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.39349d81.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport \"./index.css\"\r\nconst Navbar=()=>{   \r\n    return <div className=\"top-bar\">\r\n        <img className=\"logo\" src=\"/logo.jpg\" alt=\"pharmacy-logo\"/>               \r\n        <h2 className=\"text-logo\">PHARMACY STORE</h2>\r\n        <img src=\"/medicine.jpg\" alt=\"avatar\"/>\r\n\r\n        \r\n    </div>\r\n    \r\n   \r\n}\r\nexport default Navbar","export const SELECTED_OPTION = 'SELECTED_OPTION';\r\nexport const ADMIN_LOGIN = 'ADMIN_LOGIN';\r\nexport const ADMIN_LOGOUT = 'ADMIN_LOGOUT';\r\nexport const SALESEXECUTIVE_LOGIN = 'SALESEXECUTIVE_LOGIN';\r\nexport const SALESEXECUTIVE_LOGOUT = 'SALESEXECUTIVE_LOGOUT';\r\nexport const ADD_MEDICINE = 'ADD_MEDICINE';\r\nexport const ADD_SALES_EXECUTIVE = 'ADD_SALES_EXECUTIVE';\r\nexport const CREATE_ORDER = 'CREATE_ORDER';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const EMPTY_CART = 'EMPTY_CART';\r\nexport const UPDATE_INVENTORY_LIST = 'UPDATE_INVENTORY_LIST';\r\nexport const UPDATE_EMPLOYEE_LIST = 'UPDATE_EMPLOYEE_LIST';\r\nexport const UPDATE_ALL_ORDERS = 'UPDATE_ALL_ORDERS';\r\nexport const UPDATE_EXECUTIVE_DETAILS = 'UPDATE_EXECUTIVE_DETAILS';\r\nexport const UPDATE_INVENTORY_DETAILS = 'UPDATE_INVENTORY_DETAILS';\r\nexport const USER_ID_FOR_UPDATE = 'USER_ID_FOR_UPDATE';\r\nexport const MEDICINE_ID_FOR_UPDATE = 'MEDICINE_ID_FOR_UPDATE'","import {SELECTED_OPTION, ADMIN_LOGIN, ADMIN_LOGOUT, SALESEXECUTIVE_LOGIN, SALESEXECUTIVE_LOGOUT, ADD_MEDICINE, ADD_SALES_EXECUTIVE, CREATE_ORDER, ADD_TO_CART, EMPTY_CART, UPDATE_INVENTORY_LIST, UPDATE_EMPLOYEE_LIST, UPDATE_ALL_ORDERS, UPDATE_EXECUTIVE_DETAILS, USER_ID_FOR_UPDATE, MEDICINE_ID_FOR_UPDATE, UPDATE_MEDICINE_DETAILS, UPDATE_INVENTORY_DETAILS } from \"../actionTypes\"\r\n\r\nexport const selectedOptions = (payload) => ({\r\n    type: SELECTED_OPTION,\r\n    payload\r\n})\r\nexport const adminLogin = (payload) => ({\r\n    type: ADMIN_LOGIN,\r\n    payload\r\n})\r\n\r\nexport const adminLogout = (payload) => ({\r\n    type: ADMIN_LOGOUT,\r\n    payload\r\n})\r\n\r\nexport const salesLogin = (payload) => ({\r\n    type: SALESEXECUTIVE_LOGIN,\r\n    payload\r\n})\r\n\r\nexport const salesLogout = (payload) => ({\r\n    type: SALESEXECUTIVE_LOGOUT,\r\n    payload\r\n})\r\n\r\n// Admin Access\r\nexport const addMedicine = (payload) => ({\r\n    type: ADD_MEDICINE,\r\n    payload\r\n})\r\n\r\nexport const addSalesExecutive = (payload) => ({\r\n    type: ADD_SALES_EXECUTIVE,\r\n    payload\r\n})\r\n\r\n\r\nexport const updateInventoryList = (payload) => ({\r\n    type: UPDATE_INVENTORY_LIST,\r\n    payload\r\n})\r\n\r\nexport const updateEmployeeList = (payload) => ({\r\n    type: UPDATE_EMPLOYEE_LIST,\r\n    payload\r\n})\r\n\r\n\r\nexport const updateAllOrders = (payload) => ({\r\n    type: UPDATE_ALL_ORDERS,\r\n    payload\r\n})\r\n\r\n\r\nexport const updateExecutiveDetails = (payload) => ({\r\n    type: UPDATE_EXECUTIVE_DETAILS,\r\n    payload\r\n})\r\n\r\nexport const updateInventoryDetails = (payload) => ({\r\n    type: UPDATE_INVENTORY_DETAILS,\r\n    payload\r\n})\r\n\r\n\r\nexport const userIdForUpdate = (payload) => ({\r\n    type: USER_ID_FOR_UPDATE,\r\n    payload\r\n})\r\n\r\nexport const medicineIdForUpdate = (payload) => ({\r\n    type: MEDICINE_ID_FOR_UPDATE,\r\n    payload\r\n})\r\n\r\n\r\n\r\n// ORDERS BY EXECUTIVE\r\n\r\nexport const createOrder = (payload) => ({\r\n    type: CREATE_ORDER,\r\n    payload\r\n})\r\n\r\nexport const addToCart = (payload) => ({\r\n    type: ADD_TO_CART,\r\n    payload\r\n})\r\n\r\n\r\nexport const emptyCart = (payload) => ({\r\n    type: EMPTY_CART,\r\n    payload\r\n})","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { adminLogout } from '../../actions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '180px',\r\n    height:'90%',    \r\n    margin:0,\r\n    padding:0,\r\n    position:'fixed',\r\n    // backgroundColor: theme.palette.background.paper,\r\n    backgroundColor:\"#81BE82\"\r\n    \r\n  },\r\n  text:{\r\n    marginLeft:theme.spacing(-2),\r\n    paddingLeft:theme.spacing(-1),\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    \r\n  },\r\n  links:{\r\n    textDecoration:\"none\",\r\n    color:\"#FAFAFA\"\r\n  },\r\n}));\r\n\r\nconst NestedList=({ logOutAdmin,loginStatus })=>{\r\n  const classes = useStyles();\r\n  const [stock, setStock] = React.useState(false);\r\n  const [emp, setEmp] = React.useState(false);\r\n  const [ord, setOrd] = React.useState(false);\r\n  // const [loginStatus,setLoginStatus]=React.useState(\"true\")\r\n  const history = useHistory()\r\n  const ihandleClick = (e) => {\r\n    setStock(!stock);\r\n  };\r\n  const ehandleClick = () => {\r\n    setEmp(!emp);\r\n  };\r\n  const ohandleClick = () => {\r\n    setOrd(!ord);\r\n  };\r\n  const handleClick = () => {\r\n    // setLoginStatus(!loginStatus);\r\n   \r\n                localStorage.setItem('loginStatus', false)\r\n                localStorage.setItem('adminLogin', false)\r\n                localStorage.setItem('salesLogin', false)\r\n                logOutAdmin()\r\n                // history.push(\"/pharmacy1\")       \r\n  };\r\n\r\n  return (\r\n      <>\r\n    <List\r\n    \r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n   \r\n      className={classes.root}\r\n    >\r\n     \r\n      <ListItem button onClick={ihandleClick}>\r\n        <ListItemIcon>\r\n          <StoreIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Inventory\" className={classes.text} />\r\n        {stock ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={stock} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/add_medicine\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>          \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Add Medicine\" className={classes.text}/>           \r\n          </ListItem> \r\n          </Link>         \r\n        </List>\r\n      </Collapse>\r\n      <Collapse in={stock} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/view_stock\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>          \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"View Stock\" className={classes.text}/>           \r\n          </ListItem> \r\n          </Link>         \r\n        </List>\r\n      </Collapse>\r\n\r\n      <ListItem button onClick={ehandleClick}>\r\n        <ListItemIcon>\r\n          <PeopleIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Executives\" className={classes.text}/>\r\n        {emp ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={emp} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/add_sales_executive\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>        \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Add Executive\" className={classes.text}/>            \r\n          </ListItem> \r\n          </Link>         \r\n        </List>\r\n      </Collapse>\r\n      <Collapse in={emp} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/view_team\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>          \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"View Executive\" className={classes.text}/>            \r\n          </ListItem>\r\n          </Link>          \r\n        </List>\r\n      </Collapse>\r\n      <ListItem button onClick={ohandleClick}>\r\n        <ListItemIcon>\r\n          <LocalHospitalIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Orders\" className={classes.text}/>\r\n        {ord ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>     \r\n      <Collapse in={ord} timeout=\"auto\" unmountOnExit>     \r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/show_all_orders\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>          \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"View Orders\" className={classes.text}/>           \r\n          </ListItem> \r\n          </Link>         \r\n        </List>\r\n      </Collapse>\r\n      <Collapse in={ord} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/create_orders\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>         \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Create Orders\"className={classes.text} />           \r\n          </ListItem> \r\n          </Link>         \r\n        </List>\r\n      </Collapse>\r\n      <Link to=\"/pharmacy1\"  className={classes.links}>\r\n        <ListItem button onClick={handleClick}>        \r\n        <ListItemIcon>\r\n          <ExitToAppIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Log-Out\" className={classes.text}/>        \r\n      </ListItem>\r\n      </Link>\r\n    </List>\r\n    \r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  loginStatus: state.loginStatus\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logOutAdmin: () => dispatch(adminLogout(''))\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NestedList)","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { addMedicine } from '../../actions/index';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styles from \"./addStock.module.css\"\r\nconst AddStock=({ add_medicine_to_inventory })=>{\r\n    const [medicineName, setMedicineName] = useState('')\r\n    const [manufacturerName, setManufacturerName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [stock, setStock] = useState(0)\r\n    const [discount, setDiscount] = useState(0)\r\n    const history = useHistory()\r\n\r\n    const handleFormSubmit = (e) => {\r\n        const medicineDetails = { \r\n            medicineName: medicineName,\r\n             manufacturerName: manufacturerName, \r\n             price: price, stock: stock, \r\n             discount: discount, \r\n             medicineId: Math.floor((Math.random() * 100000000) + 1) \r\n            }\r\n\r\n        e.preventDefault();\r\n        e.target[0].value = ''\r\n        e.target[1].value = ''\r\n        e.target[2].value = ''\r\n        e.target[3].value = ''\r\n        e.target[4].value = ''\r\n\r\n        add_medicine_to_inventory(medicineDetails)\r\n        var inventoryList = JSON.parse(localStorage.getItem('inventoryList')) || [];\r\n        inventoryList.push(medicineDetails);\r\n        localStorage.setItem('inventoryList', JSON.stringify(inventoryList));\r\n        alert(\"stock inserted successfully\")\r\n        history.push(\"/admin/view_stock\")\r\n    }\r\n    return (\r\n        <div id={styles.loginform}>\r\n            <h2 id={styles.headerTitle}>Medicine Form</h2>  \r\n                <form onSubmit={handleFormSubmit}>  \r\n                    <div className={styles.row}>\r\n                        <label>Medicine Name</label>\r\n                        <input type=\"text\" name=\"text\" required placeholder=\"Medicine name\" onChange={(e) => { setMedicineName(e.target.value) }} />\r\n                    </div>\r\n                    <div className={styles.row}>\r\n                        <label>Manufacturer Name</label>\r\n                        <input type=\"text\" required placeholder=\"Manufacturer Name\" onChange={(e) => { setManufacturerName(e.target.value) }} />\r\n                    </div>\r\n                    <div className={styles.row}>\r\n                        <label >Price(INR)</label>\r\n                        <input type=\"text\" required placeholder=\"price\" onChange={(e) => { setPrice(e.target.value) }} />\r\n                    </div>\r\n                    <div className={styles.row}>\r\n                        <label >Stock</label>\r\n                        <input type=\"number\" min=\"0\" required placeholder=\"Available quantity\" onChange={(e) => { setStock(e.target.value) }} />\r\n                    </div>\r\n                    <div className={styles.row}>\r\n                        <label>Discount (%)</label>\r\n                        <input type=\"number\" min=\"0\" max=\"100\" required placeholder=\"Discount in percent\" onChange={(e) => { e.target.value<100 && setDiscount(e.target.value) }} />\r\n                    </div>\r\n                    <div className={styles.row}>\r\n                        <button type=\"submit\">Add to the Inventory</button>\r\n                    </div>\r\n                </form>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    add_medicine_to_inventory: (payload) => dispatch(addMedicine(payload))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(AddStock)","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { updateInventoryDetails } from '../../actions';\r\nimport styles from \"./viewStock.module.css\";\r\n\r\n\r\nconst ViewStock=({inventoryList, update_inventory_details,inventory_list_after_delete_ById})=>{\r\n \r\n  const [medicineId, setMedicineId] = useState('')\r\n  const [medicineName, setMedicineName] = useState('')\r\n  const [manufacturerName, setManufacturerName] = useState('')\r\n  const [price, setPrice] = useState(\"\")\r\n  const [stock, setStock] = useState(\"\")\r\n  const [discount, setDiscount] = useState(\"\") \r\n  const handleEdit=(id)=>{    \r\n    const popItem=inventoryList.find((prod) => prod.medicineId === id)\r\n       \r\n      setMedicineId(popItem.medicineId);\r\n      setMedicineName(popItem.medicineName)\r\n      setManufacturerName(popItem.manufacturerName)\r\n      setPrice(popItem.price)\r\n      setStock(popItem.stock)\r\n      setDiscount(popItem.discount)    \r\n     \r\n    }\r\n \r\n const handleUpdate=(id)=>{\r\n  \r\n  if(id!==\"\"){\r\n  \r\n   const inventoryListAfterUpdate= JSON.parse(localStorage.getItem('inventoryList')) ;\r\n   alert(inventoryListAfterUpdate)\r\n   const updatedIndex=inventoryListAfterUpdate.findIndex((prod) => prod.medicineId === id)\r\n \r\n   inventoryListAfterUpdate[updatedIndex].medicineName=medicineName;\r\n   inventoryListAfterUpdate[updatedIndex].manufacturerName=manufacturerName;\r\n   inventoryListAfterUpdate[updatedIndex].price=price;\r\n   inventoryListAfterUpdate[updatedIndex].stock=stock;\r\n   inventoryListAfterUpdate[updatedIndex].discount=discount;   \r\n   localStorage.setItem('inventoryList', JSON.stringify(inventoryListAfterUpdate));\r\n   update_inventory_details(inventoryListAfterUpdate)\r\n   }\r\n   \r\n   setMedicineId(\"\")\r\n   setMedicineName(\"\")\r\n   setManufacturerName(\"\")\r\n   setPrice(\"\")\r\n   setStock(\"\")\r\n   setDiscount(\"\")\r\n\r\n  }\r\n  const removeStock=(id)=>{\r\n    var inventoryListAfterDelete = JSON.parse(localStorage.getItem('inventoryList')) || [];\r\n    inventoryListAfterDelete = inventoryListAfterDelete.filter(item => item.medicineId !== id)\r\n    localStorage.setItem('inventoryList', JSON.stringify(inventoryListAfterDelete));\r\n    inventory_list_after_delete_ById(inventoryListAfterDelete)    \r\n\r\n  }\r\n  \r\n   \r\n \r\n return(\r\n      <div className={styles.tableWrapper}>\r\n       \r\n        <table className={styles.gridTable}>\r\n        <caption>Inventory Details</caption>\r\n          <tr>\r\n            <th>Medicine</th>\r\n            <th>Manufacturer</th>\r\n            <th>Price</th>\r\n            <th>quantity</th>\r\n            <th>Discount</th>\r\n          </tr>\r\n          <tr>   \r\n            <td><input type=\"text\" required value={medicineName} onChange={(e) => { setMedicineName(e.target.value) }}></input></td>\r\n            <td><input type=\"text\" required value={manufacturerName} onChange={(e) => { setManufacturerName(e.target.value) }}></input></td>\r\n            <td><input type=\"text\" required value={price} onChange={(e) => { setPrice(e.target.value) }}></input></td>\r\n            <td><input type=\"text\" required min=\"0\" value={stock} onChange={(e) => { setStock(e.target.value) }}></input></td>\r\n            <td><input type=\"text\" required min=\"0\" max=\"100\" value={discount} onChange={(e) => { setDiscount(e.target.value) }}></input></td>\r\n            <td><button onClick={()=>handleUpdate(medicineId)}>Update</button></td>\r\n   \r\n          </tr>\r\n          <tbody>  {inventoryList.map(item =>{    \r\n               return <tr key={item.medicineId}>\r\n                        <td>{item.medicineName}</td>\r\n                        <td>{item.manufacturerName}</td>\r\n                        <td>{item.price}</td>\r\n                        <td>{item.stock}</td>\r\n                        <td>{item.discount}</td>\r\n                        <td onClick={()=>handleEdit(item.medicineId)}><EditIcon/></td>\r\n                        <td onClick={()=>removeStock(item.medicineId)}><DeleteIcon/></td>\r\n                      </tr>\r\n                    })}\r\n          </tbody>\r\n        </table>\r\n       \r\n      </div>\r\n      )\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  inventoryList: state.inventoryList,\r\n \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  update_inventory_details: (payload) => dispatch(updateInventoryDetails(payload)),\r\n  inventory_list_after_delete_ById: (payload) => dispatch(updateInventoryDetails(payload)),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewStock);","import React,{useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addSalesExecutive } from '../../actions/index';\r\nimport styles from \"./addEmp.module.css\";\r\nconst AddEmployee=({ add_executive_to_team })=>{\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [experience, setExperience] = useState(0)\r\n    const handleFormSubmit = (e) => {\r\n        const executiveDetails = { firstName: firstName, lastName: lastName, dob: dob, gender: gender, experience: experience, salesExecutiveId: Math.floor((Math.random() * 100000000) + 1) }\r\n        e.preventDefault();\r\n        e.target[0].value = ''\r\n        e.target[1].value = ''\r\n        e.target[2].value = ''\r\n        e.target[3].value = ''\r\n        e.target[4].value = ''\r\n        e.target[5].value=''\r\n        e.target[6].value=''\r\n        add_executive_to_team(executiveDetails)\r\n        var empList = JSON.parse(localStorage.getItem('empList')) || [];\r\n        empList.push(executiveDetails);\r\n        localStorage.setItem('empList', JSON.stringify(empList));\r\n    }\r\n\r\n    return(\r\n        <div id={styles.loginform}>\r\n             <h2 id={styles.headerTitle}>Employee Registration</h2>  \r\n            <form onSubmit={handleFormSubmit}>\r\n           \r\n            <div className={styles.row}>\r\n                <label>First Name</label>\r\n                <input type=\"text\"  required placeholder=\"First Name\" onChange={(e) => { setFirstName(e.target.value) }} />\r\n            </div>\r\n            <div className={styles.row}>\r\n                 <label>Last Name</label>\r\n                 <input type=\"text\"  required placeholder=\"Last Name \" onChange={(e) => { setLastName(e.target.value) }}/>\r\n            </div>\r\n            <div className={styles.row}>\r\n                 <label >DOB</label>\r\n                 <input type=\"date\"  required placeholder=\"DOB\" onChange={(e) => { setDob(e.target.value) }}/>\r\n            </div>\r\n            <div className={styles.rowRadio}>\r\n                <div>\r\n            <label>Gender</label>\r\n            <input type=\"radio\" value=\"male\"  required  onChange={(e)=>{setGender(e.target.value)}} name=\"gender\" />\r\n            <label for=\"male\">Male</label>\r\n\r\n            <input type=\"radio\" value=\"female\" required onChange={(e)=>{setGender(e.target.value)}} name=\"gender\"/>\r\n            <label>Female</label> \r\n            </div>               \r\n            </div>\r\n            <div className={styles.row}>\r\n                 <label >Experience</label>\r\n                 <input type=\"number\" required placeholder=\"Experience\"  onChange={(e)=>{setExperience(e.target.value)}}  />\r\n            </div>\r\n            <div id=\"button\" className={styles.row}>\r\n                <button type=\"submit\">Add Executive</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    )}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    add_executive_to_team: (payload) => dispatch(addSalesExecutive(payload))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(AddEmployee)","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateExecutiveDetails } from '../../actions';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport styles from \"./viewStock.module.css\"\r\n\r\nconst ViewEmployee=({ teamList, team_list_after_delete,update_executive_details})=>{\r\n    console.log(teamList)\r\n    const [salesExecutiveId, setSalesExecutiveId] = useState('')\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [gender, setGender] = useState(\"\")\r\n  const [dob, setDob] = useState(\"\")\r\n  const [experience, setExperience] = useState(\"\")\r\n    const handleEdit=(id)=>{  \r\n        const popItem=teamList.find((prod) => prod.salesExecutiveId === id)       \r\n        setFirstName(popItem.firstName);\r\n        setLastName(popItem.lastName)\r\n        setGender(popItem.gender)\r\n        setDob(popItem.dob)\r\n        setExperience(popItem.experience)\r\n        setSalesExecutiveId(popItem.salesExecutiveId)\r\n       \r\n    }\r\n    const removeStock=(id)=>{\r\n        var empListAfterDelete = JSON.parse(localStorage.getItem('empList')) || [];\r\n        empListAfterDelete = empListAfterDelete.filter(item => item.salesExecutiveId !== id)\r\n        localStorage.setItem('empList', JSON.stringify(empListAfterDelete));\r\n        team_list_after_delete(empListAfterDelete)    \r\n\r\n    }\r\n    const handleUpdate=(id)=>{\r\n     \r\n       if(id!==\"\"&& firstName!==\"\"&&lastName!==\"\"&&gender!==\"\"&&dob!==\"\"&&experience!==\"\"){\r\n           alert(\"ajj\")\r\n        const empListAfterUpdate= JSON.parse(localStorage.getItem('empList')) ;\r\n        alert(empListAfterUpdate)\r\n        const updatedIndex=empListAfterUpdate.findIndex((prod) => prod.salesExecutiveId === id)\r\n      \r\n        empListAfterUpdate[updatedIndex].firstName=firstName;\r\n        empListAfterUpdate[updatedIndex].lastName=lastName;\r\n        empListAfterUpdate[updatedIndex].gender=gender;\r\n        empListAfterUpdate[updatedIndex].dob=dob;\r\n        empListAfterUpdate[updatedIndex].experience=experience;   \r\n        localStorage.setItem('empList', JSON.stringify(empListAfterUpdate));\r\n        update_executive_details(empListAfterUpdate)\r\n        }\r\n        setFirstName(\"\")\r\n        setLastName(\"\")\r\n        setGender(\"\")\r\n        setDob(\"\")\r\n        setExperience(\"\")    \r\n       \r\n   \r\n    }\r\n    return(\r\n        <div className={styles.tableWrapper}>\r\n          <table className={styles.gridTable}>\r\n          <caption>Executive Details</caption>\r\n            <tr>\r\n              <th>FirstName</th>\r\n              <th>LastName</th>\r\n              <th>Gender</th>\r\n              <th>DOB</th>\r\n              <th>Experience</th>\r\n            </tr>\r\n            <tr>    \r\n               <td><input type=\"text\" required value={firstName} onChange={(e) => { setFirstName(e.target.value) }}></input></td>\r\n              <td><input type=\"text\" required value={lastName} onChange={(e) => { setLastName(e.target.value) }}></input></td>\r\n              <td><input type=\"text\" required value={gender} onChange={(e) => { setGender(e.target.value) }}></input></td>\r\n              <td><input type=\"date\" required value={dob} onChange={(e) => { setDob(e.target.value) }}></input></td>\r\n              <td><input type=\"Number\" required value={experience} onChange={(e) => { setExperience(e.target.value) }}></input></td>\r\n              <td><button onClick={()=>handleUpdate(salesExecutiveId)}>Update</button></td>\r\n            </tr>\r\n            <tbody>  {teamList.map(item =>{    \r\n                return <tr key={item.salesExecutiveId}>\r\n                          <td>{item.firstName}</td>\r\n                          <td>{item.lastName}</td>\r\n                          <td>{item.gender}</td>\r\n                          <td>{item.dob}</td>\r\n                          <td>{item.experience}</td>\r\n                          <td onClick={()=>handleEdit(item.salesExecutiveId)}><EditIcon/></td>\r\n                          <td onClick={()=>removeStock(item.salesExecutiveId)}><DeleteIcon/></td>\r\n                        </tr>\r\n                      })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )\r\n  \r\n  }\r\n  const mapStateToProps = (state) => ({\r\n    teamList: state.teamList,\r\n   \r\n  })\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    update_executive_details: (payload) => dispatch(updateExecutiveDetails(payload)),\r\n    team_list_after_delete: (payload) => dispatch(updateExecutiveDetails(payload)),\r\n  })\r\n  \r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ViewEmployee);","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { connect } from 'react-redux';\r\nimport { updateAllOrders } from \"../../actions/index\";\r\nimport  styles from \"../SalesExecutive/viewOrders.module.css\" \r\nconst AdminviewOrders=({allOrders, orders_list_after_delete})=>{\r\n    const orders=JSON.parse(localStorage.getItem(\"allOrders\"));   \r\n    \r\n    const removeStock=(id)=>{\r\n       \r\n        var ordersListAfterDelete = JSON.parse(localStorage.getItem('allOrders')) || [];\r\n        ordersListAfterDelete = ordersListAfterDelete.filter(item => item.orderId !== id)\r\n        localStorage.setItem('allOrders', JSON.stringify(ordersListAfterDelete));\r\n        orders_list_after_delete(ordersListAfterDelete)  \r\n\r\n    }\r\n\r\n    return <div className={styles.container}>\r\n    <h2>SalesExecutive Orders</h2>\r\n    <table className={styles.gridTable}>\r\n    <tr className={styles.header} >               \r\n             <td >customerName</td>\r\n             <td>contactNumber</td>\r\n             <td >productName</td>\r\n             <td>price</td>\r\n             <td >quantity</td>\r\n             <td >total</td>\r\n         </tr>\r\n     {\r\n         orders.map((item,index)=>{\r\n             return  <tr key={index}  className={styles.header}>               \r\n             <td >{item.customerName}</td>\r\n             <td>{item.contactNumber}</td>\r\n             <td >{item.productName}</td>\r\n             <td >{item.price}</td>\r\n             <td >{item.quantity}</td>\r\n             <td>{item.total}</td>\r\n             <td onClick={()=>removeStock(item.orderId)} style={{cursor:\"pointer\"}}><DeleteIcon/></td>\r\n         </tr>\r\n         })\r\n     }\r\n    </table>\r\n\r\n </div>\r\n    \r\n    \r\n}\r\nconst mapStateToProps = (state) => ({\r\n    allOrders: state.allOrders\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    \r\n    orders_list_after_delete: (payload) => dispatch(updateAllOrders(payload)),\r\n    \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminviewOrders);\r\n\r\n","import React,{useState} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { createOrder, emptyCart } from \"../../actions/index\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport styles from \"./createOrder.module.css\";\r\n\r\nconst CreateListOrder=()=>{\r\n    \r\n    const[customerName,setCustomerName]=useState(\"\");\r\n    const[contactNumber,setContactNumber]=useState(\"\");\r\n    const[productName,setProductName]=useState(\"\");\r\n    const[price,setPrice]=useState(0)\r\n    const[stock,setStock]=useState(0);\r\n    const[quantity,setQuantity]=useState(0)    \r\n    const[discount,setDiscount]=useState(0)   \r\n    \r\n    const productList=JSON.parse(localStorage.getItem(\"inventoryList\")) || []  \r\n   \r\n    const handleChange = (e) => {\r\n        \r\n      const index=productList.findIndex(item=>{return item.medicineName===e.target.value})\r\n      \r\n        setPrice(productList[index].price)       \r\n        setStock(productList[index].stock)\r\n        setDiscount(productList[index].discount)\r\n        setProductName(e.target.value)\r\n\r\n      }\r\n      const increaseQuantity=()=>{\r\n          if(quantity<=stock){\r\n          setQuantity(prevState => prevState + 1)\r\n       \r\n          }\r\n      }\r\n      const decreaseQuantity=()=>{\r\n          if(quantity>0){\r\n        setQuantity(prevState => prevState - 1)\r\n       \r\n          }\r\n    }\r\n    const handleForm= (e) => {\r\n        const orderDetails = { \r\n            orderId: Math.floor((Math.random() * 100000000) + 1) ,\r\n            customerName: customerName,\r\n             cantactNumber: contactNumber, \r\n             productName:productName,\r\n             price: price,\r\n             quantity:quantity,\r\n             total:(price*quantity)-((price*quantity*discount)/100)           \r\n            \r\n            }\r\n            e.preventDefault(); \r\n\r\n        createOrder(orderDetails)\r\n        var newOrders = JSON.parse(localStorage.getItem('allOrders')) || [];\r\n        newOrders.push(orderDetails);\r\n        localStorage.setItem('allOrders', JSON.stringify(newOrders));\r\n        \r\n       \r\n        e.target[0].value = ''\r\n        e.target[1].value = ''\r\n        e.target[2].value = ''\r\n        e.target[3].value = ''\r\n        e.target[4].value = ''\r\n        setPrice(0)\r\n        setQuantity(0)\r\n        setProductName(\"\")        \r\n        alert( \"Oreder created successfully\")\r\n        \r\n    }\r\n    return (\r\n        <div id={styles.loginform}>\r\n        <h2 id={styles.headerTitle}>Create Order Form</h2>  \r\n            <form onSubmit={handleForm}>  \r\n                <div className={styles.row}>\r\n                <label>Customer Name</label>\r\n                <input type=\"text\" required  value={customerName} placeholder=\"Customer Name\" onChange={(e) => { setCustomerName(e.target.value) }} />\r\n            </div>\r\n            <div className={styles.row}>\r\n                <label>ContactNumber</label>\r\n                <input type=\"text\" required  value={contactNumber} placeholder=\"ContactNumber\" pattern=\"[1-9]{1}[0-9]{9}\" maxlength=\"10\" onChange={(e) => { setContactNumber(e.target.value) }}/>\r\n            </div>\r\n            <div className={styles.row}>\r\n                <label> Slect Product</label>\r\n               \r\n             <select className={styles.dropdown} required placeholder=\"SelectProduct\"  onChange={(e)=>handleChange(e)} >\r\n                            <option></option>\r\n                   {productList.map((item)=>{return <option value={item.medicineName}>{item.medicineName}</option>})}\r\n            </select>\r\n      \r\n            </div>\r\n            <div className={styles.row}>    \r\n            <label>Price per uint </label>\r\n                {/* <span>{price}</span> */}\r\n                <input type=\"number\" required  value={price} readOnly/>\r\n            </div>\r\n            <div className={styles.row}>\r\n                <label >Select Quantity</label>\r\n              <span  style={{position:\"relative\"}}>\r\n                  <RemoveIcon onClick={decreaseQuantity}  style={{width:\"25px\",height:\"25px\",padding:\"2px\",marginRight:\"5px\",backgroundColor:\"#ccc\"}}/>\r\n                  <span style={{padding:\"8px\",position:\"absolute\",top:\"0\"}}>{quantity}</span>\r\n                  <AddIcon onClick={increaseQuantity} style={{width:\"25px\",height:\"25px\",padding:\"2px\",marginLeft:\"30px\",backgroundColor:\"#ccc\"}}/>\r\n              </span>\r\n            </div>\r\n            {/* <div className=\"form-group\">\r\n            <label htmlFor=\"medicineInStock\">Amount</label>\r\n                <span>{total}</span>\r\n            </div> */}\r\n           \r\n           <div className={styles.row}>\r\n            <button type=\"submit\">Submit</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n   \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    create_order: (payload) => dispatch(createOrder(payload)),\r\n   \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateListOrder);\r\n ","import React from 'react';\r\nimport { BrowserRouter as Router,Switch,Route} from 'react-router-dom';\r\nimport Sidebar from \"./sidebar\";\r\nimport AddStock from \"./addStock\";\r\nimport ViewStock from \"./viewStock\";\r\nimport AddEmploye from \"./addEmployee\";\r\nimport  ViewEmployes from \"./viewEmployes\";\r\nimport ShowOrders from \"./viewOrders\";\r\nimport CreateOrder from \"./createOrder\";\r\nimport { connect } from 'react-redux';\r\nimport Home from '../Home/index';\r\nimport \"./index.css\"\r\n\r\n\r\nconst AdminHome=({ adminLogin, loginStatus, salesLogin })=>{ \r\n   \r\n  return <div id=\"admin-home\">\r\n   \r\n    <Router>\r\n    <Sidebar/>\r\n    {console.log(adminLogin, loginStatus,salesLogin)}\r\n    <div className=\"admin-home-rightContainer\">\r\n      <Switch>\r\n          {adminLogin && loginStatus && <Route path=\"/admin/view_stock\"><ViewStock/> </Route>}\r\n          {adminLogin && loginStatus && <Route path=\"/admin/add_medicine\"><AddStock /> </Route>}\r\n          {adminLogin && loginStatus && <Route path=\"/admin/add_sales_executive\"><AddEmploye /> </Route>}\r\n          {adminLogin && loginStatus && <Route path=\"/admin/view_team\"><ViewEmployes /> </Route>}\r\n          {adminLogin && loginStatus && <Route path=\"/admin/show_all_orders\"><ShowOrders /> </Route>}\r\n          {adminLogin && loginStatus && <Route path=\"/admin/create_orders\"><CreateOrder /> </Route>} \r\n          {!adminLogin && !loginStatus && <Route path=\"/pharmacy1\"><Home/></Route>}\r\n      </Switch>\r\n    </div>\r\n    </Router>\r\n\r\n\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  adminLogin: state.adminLogin,\r\n  loginStatus: state.loginStatus,\r\n  salesLogin: state.salesLogin\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, null)(AdminHome)","import React from 'react';\r\nimport styles from \"./viewOrders.module.css\"\r\nconst viewOrders=()=>{\r\n    const orders=JSON.parse(localStorage.getItem(\"allOrders\"))||[]\r\n    return <div className={styles.container}>\r\n       <h2>SalesExecutive Orders</h2>\r\n       <table className={styles.gridTable}>\r\n       <tr className={styles.header} >               \r\n                <td >customerName</td>\r\n                <td>contactNumber</td>\r\n                <td >productName</td>\r\n                <td>price</td>\r\n                <td >quantity</td>\r\n                <td >total</td>\r\n            </tr>\r\n        {\r\n            orders.map((item,index)=>{\r\n                return  <tr key={index}  className={styles.header}>               \r\n                <td >{item.customerName}</td>\r\n                <td>{item.contactNumber}</td>\r\n                <td >{item.productName}</td>\r\n                <td >{item.price}</td>\r\n                <td >{item.quantity}</td>\r\n                <td>{item.total}</td>\r\n            </tr>\r\n            })\r\n        }\r\n       </table>\r\n\r\n    </div>\r\n}\r\nexport default viewOrders","import React from 'react';\r\nimport {BrowserRouter as Router,Switch,Route, Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Home from '../Home';\r\nimport AddOrders from \"../Manager/createOrder\";\r\nimport ViewOrderr from \"./viewOrders\"\r\nimport {salesLogout} from \"../../actions\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SalesExecutive=( {loginStatus, salesLogin,logOutSales,adminLogin })=>{\r\n    const history=useHistory()\r\n\r\n    const handleClick = () => {\r\n                    localStorage.setItem('loginStatus', false)\r\n                    localStorage.setItem('adminLogin', false)\r\n                    localStorage.setItem('salesLogin', false)                   \r\n                    logOutSales()\r\n                    history.push(\"/pharmacy1\")\r\n           \r\n      };\r\n    return <div id=\"sales-home\" style={{marginTop:\"80px\"}}>\r\n      <Router>\r\n    <h2 style={{color:\"#fff\"}}>SalesExecutive</h2>\r\n    <div>\r\n         <span style={{border:\"1px solid #ccc\",padding:\"5px\",marginRight:\"5px\",cursor:\"pointer\"}}><Link to=\"/createOrder\" style={{textDecoration:\"none\"}}>Create Order</Link></span>\r\n         <span style={{border:\"1px solid #ccc\",padding:\"5px\",marginRight:\"5px\",cursor:\"pointer\"}}><Link to=\"/sales/viewOrders\"style={{textDecoration:\"none\"}}>View Orders</Link></span>\r\n         <span style={{border:\"1px solid #ccc\",padding:\"5px\",marginRight:\"5px\",cursor:\"pointer\"}} onClick={handleClick}><Link to=\"/pharmacy1\"style={{textDecoration:\"none\"}}>LogOut</Link></span>\r\n    </div>\r\n    <div style={{margin:\"15px\"}}>\r\n     \r\n      <Switch>\r\n    {salesLogin&&loginStatus && <Route path=\"/createOrder\"><AddOrders/></Route>}\r\n    {salesLogin&&loginStatus && <Route path=\"/sales/viewOrders\"><ViewOrderr/></Route>}\r\n    {!salesLogin && !loginStatus&&<Route path=\"/pharmacy1\"><Home/></Route>}\r\n    </Switch>\r\n    \r\n    </div>\r\n    </Router>\r\n</div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  adminLogin: state.adminLogin,\r\n  loginStatus: state.loginStatus,\r\n  salesLogin: state.salesLogin\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    logOutSales: () => dispatch(salesLogout(''))\r\n  \r\n  })\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SalesExecutive)","import React,{useEffect, useState} from 'react';\r\nimport \"./index.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { adminLogin, salesLogin} from \"../../actions\"\r\nconst Login=(props)=>{\r\n const user= props.userData.value\r\n  console.log(props.userData.value)\r\n  const [loginEmail, setLoginEmail] = useState('');\r\n  const [loginPassword, setLoginPassword] = useState('')\r\n  const [loginStatus, setLoginStatus] = useState(localStorage.getItem('loginStatus') || false);\r\n  // const [isAdmin, setIsAdmin] = useState(true);\r\n  // const [isEmployee, setIsEmployee] = useState(false);\r\n  const history = useHistory();\r\n\r\n  if (loginStatus !== 'false') {\r\n    localStorage.setItem('loginStatus', loginStatus)\r\n  }\r\n \r\n  const handleLogin=(e)=>{\r\n    e.preventDefault()   \r\n    if (props.userData.value==1) {\r\n        if (loginEmail === \"test-admin\" && loginPassword === \"test-admin\") {\r\n            setLoginStatus(true)\r\n            localStorage.setItem('loginStatus', true)\r\n            localStorage.setItem('adminLogin', true)\r\n            history.push('/admin/adminHome')\r\n            props.adminSignedIn()\r\n            alert(\"success\")\r\n            \r\n        } else {\r\n            alert(\"Invalid ggcredentials!\")\r\n        }\r\n    } else {\r\n        if (loginEmail === \"test-sales\" && loginPassword === \"test-sales\") {\r\n            setLoginStatus(true)\r\n            localStorage.setItem('loginStatus', true)\r\n            localStorage.setItem('salesLogin', true)\r\n            history.push('/sales/salesHome')\r\n            props.salesSignedIn()\r\n            alert(\"success2\")\r\n\r\n        } else {\r\n            alert(\"Invalid credentials!\")\r\n        }\r\n    }\r\n  }\r\n    return (      \r\n        <div id=\"loginform\">\r\n           <form onSubmit={handleLogin}>\r\n               <h2 id=\"headerTitle\">{props.userData.label} Login</h2>     \r\n               <div className=\"row\">\r\n                  <label>Username</label>\r\n                  <input type=\"text\" placeholder=\"Enter your username\" required onChange={(eVal) => setLoginEmail(eVal.target.value)} />\r\n                </div> \r\n                <div className=\"row\">\r\n                  <label>Password</label>\r\n                  <input type=\"password\" placeholder=\"Enter your password\" required onChange={(pVal) => {setLoginPassword(pVal.target.value)}}/>\r\n                </div> \r\n                <div id=\"button\" className=\"row\">\r\n                  <button type='submit'>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  adminSignedIn: () => dispatch(adminLogin('')),\r\n  salesSignedIn: () => dispatch(salesLogin(''))\r\n\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Login)","import React,{useState} from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport { selectedOptions } from '../../actions';\r\nimport Login from '../Login';\r\nimport { connect } from 'react-redux';\r\nimport { adminLogin, salesLogin,loginStatus} from \"../../actions\";\r\nimport \"./landing.css\";\r\nimport { useHistory } from 'react-router-dom';\r\nconst Landing=({adminLogin, salesLogin,loginStatus})=>{\r\n    if (loginStatus !== 'false'|| adminLogin !== 'false' || salesLogin !== 'false') {\r\n        localStorage.setItem('loginStatus', \"false\");\r\n        localStorage.setItem('adminLogin', \"false\");\r\n        localStorage.setItem('salesLogin', \"false\")\r\n    }\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const history=useHistory()\r\n    const handleChange = e => {\r\n        setSelectedOption(e); \r\n            \r\n        \r\n      }\r\n    //  style={{marginTop:\"85px\",padding:\"0 10px\",maxWidth:\"350px\",marginLeft:\"auto\",marginRight:\"auto\"}}\r\n    return <div className=\"landing\" >\r\n         <Select className=\"dropdown\"\r\n        placeholder=\"Select User\"\r\n        value={selectedOption} \r\n        options={[{value:1,label:\"Admin\"},{value:2,label:\"SalesExecutive\"}]}\r\n        onChange={handleChange} \r\n      />\r\n     \r\n      {\r\n          selectedOption && <Login userData={selectedOption}/>\r\n      }\r\n     \r\n    </div>\r\n}\r\nexport default Landing","import React from 'react';\r\nimport Man from \"../Manager/index\";\r\nimport Sales from \"../SalesExecutive/index\";\r\nimport Login from '../Login';\r\n\r\nimport { connect } from 'react-redux'\r\nimport Landing from '../Landing/index';\r\nimport { Route } from 'react-router-dom';\r\n\r\n\r\nconst Home = ({ loginStatus, adminLogin, salesLogin }) => {\r\n   \r\n    return (<div style={{margin:\"0px\"}}>\r\n        {adminLogin === true && loginStatus === true && <Man />}\r\n        {salesLogin === true && loginStatus === true && <Sales />}\r\n        {loginStatus === false && <Landing/>}\r\n    </div>);\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loginStatus: state.loginStatus,\r\n    adminLogin: state.adminLogin,\r\n    salesLogin: state.salesLogin\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route, BrowserRouter as Router} from 'react-router-dom';\nimport Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Admin from './components/Manager';\n// import AddStock from './components/Manager/addStock';\n// import Landing from './components/Landing';\n// import StockView from \"./components/Manager/viewStock\";\n// import AddSalesExec from \"./components/Manager/addEmployee\";\n// import  ViewEmploee from \"./components/Manager/viewEmployees\";\n// import ShowOrder from \"./components/Manager/viewOrders\";\n// import CreateOrder from \"./components/Manager/createOrder\";\n// import adminHome from './components/Manager/index';\nimport Home from './components/Home';\nimport { connect } from 'react-redux';\n// import AddOrders from \"./components/SalesExecutive/createOrder\";\n// import ViewOrderr from \"./components/SalesExecutive/viewOrders\"\n\nimport Man from \"./components/Manager/index\"\nimport AdminHome from './components/Manager';\nimport SalesHome from \"./components/SalesExecutive\"\nimport Landing from './components/Landing';\n\nfunction App({ adminLogin, loginStatus, salesLogin }) {\n  console.log(adminLogin)\n  return (\n    <div className=\"App\">\n    <Router>\n    <Navbar/>\n   \n    \n    <Switch>\n          <Route path=\"/pharmacy1\" exact><Home/></Route>\n          {/* {!adminLogin && !loginStatus &&<Route path=\"/\" exact><Home /></Route>} */}\n          {/* <Route path=\"/login\" exact><Home /></Route> */}\n          {/* <Route path=\"/\" exact><Login /></Route> */}\n           { adminLogin && loginStatus && <Route path=\"/admin/adminHome\"><AdminHome/> </Route>}\n           {salesLogin && loginStatus && <Route path=\"/sales/salesHome\"><SalesHome /></Route>}\n         {/*adminLogin && loginStatus && <Route path=\"/admin/add_medicine\"><StockView/> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/view_inventory\"><AddStock /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/add_sales_executive\"><AddSalesExec /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/view_team\"><ViewEmploee /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/show_all_orders\"><ShowOrder /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/create_orders\"><CreateOrder /> </Route>}\n          {/* {salesLogin && loginStatus && <Route path=\"/sales_executive/create_order\"><CreateExecutiveOrder /></Route>} */}\n          {/* {salesLogin && loginStatus && <Route path=\"/sales_executive/view_orders\"><ViewOrders /> </Route>} */} \n          {/* {salesLogin&&loginStatus && <Route path=\"/sales/createOrder\"><AddOrders/></Route>}\n    {salesLogin&&loginStatus && <Route path=\"/sales/viewOrders\"><ViewOrderr/></Route>}\n    {!salesLogin && !loginStatus&&<Route path=\"/\"><Home/></Route>} */}\n        </Switch>\n    </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  adminLogin: state.adminLogin,\n  loginStatus: state.loginStatus,\n  salesLogin: state.salesLogin\n})\n\n\nexport default connect(mapStateToProps, null)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_MEDICINE, ADD_SALES_EXECUTIVE, ADD_TO_CART, ADMIN_LOGIN, ADMIN_LOGOUT, CREATE_ORDER, EMPTY_CART, MEDICINE_ID_FOR_UPDATE, SALESEXECUTIVE_LOGIN, SALESEXECUTIVE_LOGOUT, UPDATE_ALL_ORDERS, UPDATE_EXECUTIVE_DETAILS, UPDATE_INVENTORY_DETAILS, UPDATE_INVENTORY_LIST, UPDATE_MEDICINE_DETAILS, UPDATE_EMPLOYEE_LIST, USER_ID_FOR_UPDATE } from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    \r\n    loginStatus: localStorage.getItem('loginStatus') === 'true' ? true : false,\r\n    adminLogin: localStorage.getItem('adminLogin') === 'true' ? true : false,\r\n    salesLogin: localStorage.getItem('salesLogin') === 'true' ? true : false,\r\n    inventoryList: JSON.parse(localStorage.getItem('inventoryList')) || [],\r\n    teamList: JSON.parse(localStorage.getItem('teamList')) || [],\r\n    allOrders: JSON.parse(localStorage.getItem('allOrders')) || [],\r\n    cartItem: JSON.parse(localStorage.getItem('cartItem')) || [],\r\n    userIdForUpdate: localStorage.getItem('userIdForUpdate'),\r\n    medicineIdForUpdate: localStorage.getItem('medicineIdForUpdate'),\r\n}\r\n\r\nconst loginReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n       \r\n        case ADMIN_LOGIN:\r\n            return { ...state, loginStatus: true, adminLogin: true, }\r\n        case ADMIN_LOGOUT:\r\n            return { ...state, loginStatus: false, adminLogin: false }\r\n        case SALESEXECUTIVE_LOGIN:\r\n            return { ...state, loginStatus: true, salesLogin: true }\r\n        case SALESEXECUTIVE_LOGOUT:\r\n            return { ...state, loginStatus: false, salesLogin: false }\r\n        case ADD_MEDICINE:\r\n            return { ...state, inventoryList: [...state.inventoryList, payload] }\r\n        case ADD_SALES_EXECUTIVE:\r\n            return { ...state, teamList: [...state.teamList, payload] }\r\n        case CREATE_ORDER:\r\n            return { ...state, allOrders: [...state.allOrders, payload] }\r\n        case ADD_TO_CART:\r\n            return { ...state, cartItem: [...state.cartItem, payload] }\r\n        case EMPTY_CART:\r\n            return { ...state, cartItem: [] }\r\n        case UPDATE_INVENTORY_LIST:\r\n            return { ...state, inventoryList: state.inventoryList.filter(item => item.medicineName !== payload) }\r\n        case UPDATE_EMPLOYEE_LIST:\r\n            return { ...state, teamList: state.teamList.filter(item => item.salesExecutiveId !== payload) }\r\n        case UPDATE_ALL_ORDERS:\r\n            return { ...state, allOrders: state.allOrders.filter(item => item.orderId !== payload) }\r\n        case UPDATE_EXECUTIVE_DETAILS:\r\n            return { ...state, teamList: payload }\r\n        case UPDATE_INVENTORY_DETAILS:\r\n            return { ...state, inventoryList: payload }\r\n        case MEDICINE_ID_FOR_UPDATE:\r\n            return { ...state, medicineIdForUpdate: payload }\r\n        case USER_ID_FOR_UPDATE:\r\n            return { ...state, userIdForUpdate: payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default loginReducer","import { createStore } from 'redux';\r\nimport reducer from '../reducer'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridTable\":\"viewOrders_gridTable__2ti2j\",\"container\":\"viewOrders_container__2Qsbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginform\":\"createOrder_loginform__3s2z5\",\"headerTitle\":\"createOrder_headerTitle__1pY6c\",\"row\":\"createOrder_row__2v68-\",\"dropdown\":\"createOrder_dropdown__3C0zw\",\"button\":\"createOrder_button__hJeL7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginform\":\"addStock_loginform__11sYb\",\"headerTitle\":\"addStock_headerTitle__3WUJe\",\"row\":\"addStock_row__2ndsd\",\"button\":\"addStock_button__3096Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginform\":\"addEmp_loginform__13nPM\",\"headerTitle\":\"addEmp_headerTitle__3-7T9\",\"row\":\"addEmp_row__4eFTc\",\"rowRadio\":\"addEmp_rowRadio__1-Ouy\",\"button\":\"addEmp_button__1E6td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"viewStock_tableWrapper__uuUMJ\",\"gridTable\":\"viewStock_gridTable__1NkUs\"};"],"sourceRoot":""}